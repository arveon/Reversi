#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Default\ constructor,\ initialises\ class\ fields\r\n\ \r\n
comment1.params=
comment1.target=void\ startGame()
comment1.text=\r\n\ Starts\ the\ game\ loading\ the\ game\ field,\ settins\ starting\ discs\ and\ sets\ the\ first\ player\ to\ white\r\n\ \r\n
comment10.params=place
comment10.target=boolean\ checkMoveLegal(java.lang.String)
comment10.text=\r\n\ Checks\ if\ the\ user's\ turn\ was\ legal\ according\ to\ the\ game\ rules\r\n\ \r\n\ @param\ place\ represents\ the\ user\ turn\ input\r\n\ @return\ moveLegal\ tells\ if\ the\ move\ was\ legal\ or\ not\r\n
comment11.params=
comment11.target=java.util.ArrayList\ getAvailableMoves()
comment11.text=\r\n\ Finds\ and\ returns\ a\ list\ of\ available\ moves\ for\ the\ current\ player\r\n\ \r\n\ @return\ moves\ the\ list\ of\ legals\ move\ available\ for\ the\ current\ player\r\n
comment12.params=vertPos\ horPos\ direction\ playerColour\ action
comment12.target=boolean\ checkValidLineFormed(int,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment12.text=\r\n\ Checks\ if\ user's\ turn\ will\ form\ a\ valid\ line\ of\ discs\ that\ can\ be\ flipped\r\n\ \r\n\ @param\ vertPos\ represents\ the\ vertical\ position\ of\ the\ tile\ to\ be\ checked\r\n\ @param\ horPos\ represents\ the\ horizontal\ position\ of\ the\ tile\ to\ be\ checked\r\n\ @param\ direction\ represents\ the\ direction\ in\ which\ to\ check\ if\ the\ line\ will\ be\ formed\r\n\ @param\ playerColor\ represents\ the\ symbol\ of\ the\ current\ player\ ("W"\ for\ white,\ "B"\ for\ black)\r\n\ @param\ action\ tells\ the\ method\ whether\ to\ check\ if\ both\ the\ move\ is\ legal\ and\ flip\ the\ discs,\ or\ just\ check\ if\ the\ move\ is\ legal\r\n\ \r\n\ @return\ lineFormed\ represents\ the\ legality\ of\ the\ move\r\n
comment13.params=
comment13.target=void\ inGameMenu()
comment13.text=\r\n\ Displays\ the\ secondary\ menu\ and\ gets\ user\ menu\ input\r\n\ \r\n
comment14.params=input
comment14.target=void\ processInGameMenu(java.lang.String)
comment14.text=\r\n\ Processes\ user\ secondary\ menu\ input\r\n\ \r\n\ @param\ input\ represents\ user\ secondary\ menu\ input\r\n
comment15.params=
comment15.target=void\ surrender()
comment15.text=\r\n\ Surrenders\ the\ game,\ displaying\ the\ winner\ and\ setting\ the\ surrender\ variable's\ value\ so\ that\ it\ will\ break\ out\ of\ gameFlow\ infinite\ loop\ and\ return\ to\ main\ menu\r\n\ \r\n
comment16.params=
comment16.target=void\ endGame()
comment16.text=\r\n\ Ends\ the\ game\ stating\ the\ winner\ and\ getting\ beck\ to\ the\ main\ menu\r\n\ \r\n
comment2.params=
comment2.target=void\ loadGame()
comment2.text=\r\n\ Loads\ the\ game\ from\ file\ selected\ by\ user\r\n\ \r\n
comment3.params=
comment3.target=void\ saveGame()
comment3.text=\r\n\ Saves\ the\ game\ with\ the\ filename\ selected\ by\ user\ into\ a\ savedGames\ folder\ of\ the\ program\r\n\ \r\n\ \r\n
comment4.params=
comment4.target=void\ setCounters()
comment4.text=\r\n\ Sets\ and\ updates\ the\ counters\ for\ the\ number\ of\ white/black\ discs\ on\ the\ board\r\n\ \r\n
comment5.params=
comment5.target=void\ closeGame()
comment5.text=\r\n\ Exits\ the\ game\r\n\ \r\n
comment6.params=
comment6.target=void\ openHelp()
comment6.text=\r\n\ Opens\ the\ help\ text\ file\ and\ prints\ it\ on\ the\ screen\r\n\ \r\n
comment7.params=
comment7.target=void\ gameFlow()
comment7.text=\r\n\ Represents\ the\ flow\ of\ the\ game,\ getting\ user\ turn\ inputs,\ processing\ them\ etc.\r\n\ \r\n
comment8.params=
comment8.target=void\ displayCounters()
comment8.text=\r\n\ Updates\ and\ prints\ the\ counters\ for\ the\ number\ of\ white/black\ discs\ on\ the\ board\r\n
comment9.params=userInput
comment9.target=boolean\ checkTurnInput(java.lang.String)
comment9.text=\r\n\ Checks\ if\ user\ turn\ input\ was\ grammatically\ correct\r\n\ \r\n\ @param\ userInput\ represents\ user\ turn\ input\r\n\ @return\ validMove\ returns\ the\ validity\ of\ move\ (true\ -\ valid/false\ -\ invalid)\r\n
numComments=17
